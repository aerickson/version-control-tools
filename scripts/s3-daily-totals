#!/usr/bin/env python
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

import botocore
import boto3
import concurrent.futures as futures


BUCKETS = (
    'moz-devservices-logging-us-west-1',
    'moz-devservices-logging-us-west-2',
    'moz-devservices-logging-us-east-1',
    'moz-devservices-logging-us-east-2',
    'moz-devservices-logging-eu-central-1',
)

def get_s3_daily_totals(day):
    s3 = boto3.resource('s3')

    total = 0

    def get_body(b, k):
        try:
            obj = s3.Object(b, k)
            return obj.get()['Body'].read()
        except botocore.exceptions.ClientError as e:
            if e.response['Error']['Code'] != 'NoSuchKey':
                raise

            return ''

    fs = []
    with futures.ThreadPoolExecutor(len(BUCKETS)) as e:
        for bn in BUCKETS:
            path = 's3/hg-bundles/%s' % day
            fs.append(e.submit(get_body, bn, path))

    for f in futures.as_completed(fs):
        data = f.result()

        for line in data.splitlines():
            parts = line.split(b' ')
            if parts[7] != b'REST.GET.OBJECT':
                continue

            if parts[12] == b'304':
                continue

            total += int(parts[14])

    return total


if __name__ == '__main__':
    import argparse
    import datetime

    parser = argparse.ArgumentParser()
    parser.add_argument('--from')
    parser.add_argument('--to')
    parser.add_argument('days', nargs='*')

    args = parser.parse_args()

    days = args.days

    if getattr(args, 'from') and args.to:
        old_day = datetime.datetime.strptime(getattr(args, 'from'),
                                             '%Y-%m-%d').date()
        new_day = datetime.datetime.strptime(args.to, '%Y-%m-%d').date()

        td = datetime.timedelta(days=1)
        d = old_day

        while d <= new_day:
            days.append(d.strftime('%Y-%m-%d'))
            d += td

    for day in days:
        total = get_s3_daily_totals(day)
        print('%s\t%d' % (day, total))
